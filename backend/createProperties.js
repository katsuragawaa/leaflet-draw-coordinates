const mongoose = require('mongoose');
const async = require('async');
require('dotenv').config();

// specify DB shape and date types
const propertiesSchema = new mongoose.Schema({
  name: String,
  coordinates: [Number, Number],
});

mongoose.connect(process.env.MONGODB_URL, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
  useFindAndModify: false,
  useCreateIndex: true,
});

// modify all instances of the models produced with noteSchema
propertiesSchema.set('toJSON', {
  transform: (document, returnedObject) => {
    returnedObject.id = returnedObject._id.toString();
    delete returnedObject._id;
    delete returnedObject.__v;
  },
});

// constructor compiled from schema created before, export CommonJS format
const Properties = mongoose.model('Properties', propertiesSchema);

const test = [
  [-25.419245336960596, -49.25960540771485],
  [-25.424051575359755, -49.2594337463379],
  [-25.425756968727946, -49.25806045532227],
  [-25.425136828476862, -49.25617218017579],
  [-25.424206612117594, -49.2513656616211],
  [-25.42777240250711, -49.24982070922852],
  [-25.429322713248204, -49.256000518798835],
  [-25.43071797586259, -49.258747100830085],
  [-25.4322682487082, -49.25754547119141],
  [-25.435368734559738, -49.256000518798835],
  [-25.437694046585214, -49.25565719604493],
  [-25.439089212255393, -49.256000518798835],
  [-25.4372289877709, -49.26063537597657],
  [-25.435988822155213, -49.262008666992195],
  [-25.433353427832145, -49.263553619384766],
  [-25.431338087394334, -49.26372528076172],
  [-25.430097861139593, -49.26492691040039],
  [-25.431183059810575, -49.26681518554688],
  [-25.431958195734747, -49.26887512207032],
  [-25.433353427832145, -49.27007675170899],
  [-25.434903666768577, -49.269218444824226],
  [-25.435368734559738, -49.26595687866212],
  [-25.437694046585214, -49.26561355590821],
  [-25.439864297311882, -49.27093505859376],
  [-25.439864297311882, -49.273338317871094],
  [-25.4372289877709, -49.27419662475586],
  [-25.436453885757242, -49.27539825439453],
  [-25.4372289877709, -49.27694320678712],
  [-25.43614384355539, -49.27728652954102],
  [-25.43521371216217, -49.27934646606446],
  [-25.435523756757824, -49.28003311157227],
  [-25.4372289877709, -49.2814064025879],
  [-25.4392442296657, -49.2814064025879],
  [-25.439864297311882, -49.28226470947266],
  [-25.44017432993794, -49.28655624389649],
  [-25.439864297311882, -49.287242889404304],
  [-25.43831412221137, -49.28775787353516],
  [-25.43738400757516, -49.28775787353516],
  [-25.436763927161174, -49.2898178100586],
  [-25.436763927161174, -49.29067611694337],
  [-25.43614384355539, -49.29153442382813],
  [-25.433353427832145, -49.292736053466804],
  [-25.4322682487082, -49.292221069335945],
  [-25.42808246625085, -49.29187774658204],
  [-25.42730730539571, -49.29050445556641],
  [-25.426067037656917, -49.28930282592774],
  [-25.42637710578821, -49.288959503173835],
  [-25.43149311477862, -49.287242889404304],
  [-25.4322682487082, -49.28518295288086],
  [-25.4322682487082, -49.283466339111335],
  [-25.431803168948825, -49.281234741210945],
  [-25.4299428319602, -49.2814064025879],
  [-25.42823749782357, -49.28226470947266],
  [-25.426687173121763, -49.28363800048828],
  [-25.42482675715479, -49.283809661865234],
  [-25.42358646388973, -49.28243637084962],
  [-25.42312135062498, -49.28089141845704],
  [-25.42312135062498, -49.27831649780274],
  [-25.428857622120013, -49.27694320678712],
  [-25.4299428319602, -49.275569915771484],
  [-25.429632773003107, -49.274024963378906],
  [-25.428702591345065, -49.272480010986335],
  [-25.424981792915535, -49.272480010986335],
  [-25.421726000062684, -49.27350997924805],
  [-25.420640716236495, -49.26939010620118],
  [-25.420485674892312, -49.26681518554688],
  [-25.421260879619282, -49.26595687866212],
  [-25.42110583907269, -49.26389694213867],
  [-25.419245336960596, -49.264583587646484],
  [-25.418470119273106, -49.26218032836915],
  [-25.418470119273106, -49.26063537597657],
  [-25.419245336960596, -49.25960540771485],
];

const saveProperties = async (coord) => {
  const properties = new Properties({
    name: 'Nome do ImÃ³vel ' + Math.random(),
    coordinates: coord,
  });

  await properties.save().then((result) => {
    console.log('data saved!');
  });
};

test.forEach(coord => saveProperties(coord))

mongoose.connection.close();

